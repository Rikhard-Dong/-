<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.ride.web.dao.NodeDao">

    <resultMap id="nodeResult" type="Node">
        <id property="nodeId" column="NodeId"/>
        <result property="nodeMark" column="NodeMark"/>
        <result property="spareNode" column="SpareNode"/>
        <result property="nodeNum" column="NodeNum"/>
        <result property="type" column="Type"/>
        <result property="status" column="Status"/>
        <result property="nowTemper" column="NowTemper"/>
        <result property="nowHumidity" column="Humidity"/>
        <result property="memo" column="Memo"/>
        <result property="getwayId" column="GetwayId"/>
    </resultMap>

    <insert id="addNode">
        INSERT INTO Node
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="node.nodeMark != null">NodeMark,</if>
            <if test="node.getwayId != null">GetwayId,</if>
            <if test="node.spareNode != null">SpareNode,</if>
            <if test="node.nodeNum != null">NodeNum,</if>
            <if test="node.type != null">Type,</if>
            <if test="node.status != null">Status,</if>
            <if test="node.nowTemper != null">NowTemper,</if>
            <if test="node.nowHumidity != null">Humidity,</if>
            <if test="node.memo != null">Memo,</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="node.nodeMark != null">#{node.nodeMark},</if>
            <if test="node.getwayId != null">#{node.getwayId},</if>
            <if test="node.spareNode != null">#{node.spareNode},</if>
            <if test="node.nodeNum != null">#{node.nodeNum},</if>
            <if test="node.type != null">#{node.type},</if>
            <if test="node.status != null">#{node.status},</if>
            <if test="node.nowTemper != null">#{node.nowTemper},</if>
            <if test="node.nowHumidity != null">#{node.nowHumidity},</if>
            <if test="node.memo != null">#{node.memo},</if>
        </trim>
    </insert>

    <update id="updateNode">
        UPDATE Node SET
        <trim suffixOverrides=",">
            <if test="node.nodeMark != null">NodeMark = #{node.nodeMark},</if>
            <if test="node.getwayId != null">GetwayId = #{node.getwayId},</if>
            <if test="node.spareNode != null">SpareNode = #{node.spareNode},</if>
            <if test="node.nodeNum != null">NodeNum = #{node.nodeNum},</if>
            <if test="node.type != null">Type =#{node.type},</if>
            <if test="node.status != null">Status = #{node.status},</if>
            <if test="node.nowTemper != null">NowTemper = #{node.nowTemper},</if>
            <if test="node.nowHumidity != null">Humidity = #{node.nowHumidity},</if>
            <if test="node.memo != null">Memo = #{node.memo},</if>
        </trim>
        WHERE NodeId = #{node.nodeId}
    </update>

    <update id="updateTemperAndHumidity">
        UPDATE Node
        SET NowTemper = #{temper}, Humidity = #{humidity}
        WHERE NodeId = #{nodeMark};
    </update>

    <update id="updateNodeByMark">
        UPDATE Node SET
        <trim suffixOverrides=",">
            <if test="node.spareNode != null">SpareNode = #{node.spareNode},</if>
            <if test="node.nodeNum != null">NodeNum = #{node.nodeNum},</if>
            <if test="node.type != null">Type =#{node.type},</if>
            <if test="node.status != null">Status = #{node.status},</if>
            <if test="node.nowTemper != null">NowTemper = #{node.nowTemper},</if>
            <if test="node.nowHumidity != null">Humidity = #{node.nowHumidity},</if>
            <if test="node.memo != null">Memo = #{node.memo},</if>
        </trim>
        WHERE NodeMark = #{node.nodeMark};
    </update>

    <delete id="deleteById">
        DELETE FROM Node
        WHERE NodeId = #{id};
    </delete>
    <delete id="deleteByMark">
        DELETE FROM Node
        WHERE NodeMark = #{mark};
    </delete>

    <select id="list" resultMap="nodeResult">
        SELECT *
        FROM Node;
    </select>

    <select id="findById" resultMap="nodeResult">
        <choose>
            <when test="userType == 0">
                SELECT
                *
                FROM Node
                WHERE NodeId = #{nodeId}
            </when>
            <otherwise>
                SELECT n.* FROM Node n WHERE n.NodeId IN (SELECT n.NodeId FROM Node n, Unit u, Rent r WHERE
                n.GetwayId = r.GetwayId AND r.UnitId = u.UnitId AND u.UnitId = #{unitId} AND GETDATE()
                BETWEEN r.StartTime AND r.EndTime) AND n.NodeId = #{nodeId}
            </otherwise>
        </choose>

    </select>

    <select id="findByMark" resultMap="nodeResult">
        <choose>
            <when test="userType == 0">
                SELECT
                *
                FROM Node
                WHERE NodeMark = #{mark};
            </when>
            <otherwise>
                SELECT n.* FROM Node n WHERE n.NodeId IN (SELECT n.NodeId FROM Node n, Unit u, Rent r WHERE
                n.GetwayId = r.GetwayId AND r.UnitId = u.UnitId AND u.UnitId = #{unitId} AND GETDATE()
                BETWEEN r.StartTime AND r.EndTime) AND n.NodeMark = #{mark}
            </otherwise>
        </choose>
    </select>

    <select id="findByIdWithGetway" resultMap="nodeResult">
        SELECT n.*
        FROM Node n
            INNER JOIN Getway g ON n.GetwayId = g.GetwayId
        WHERE NodeId = #{nodeMark};
    </select>

    <select id="findByMarkWithGetway" resultMap="nodeResult">
        SELECT n.*
        FROM Node n
            INNER JOIN Getway g ON n.GetwayId = g.GetwayId
        WHERE NodeMark = #{mark};
    </select>
    <select id="isExists" resultType="java.lang.Boolean">
        SELECT count(1)
        FROM Node
        WHERE NodeMark = #{mark};
    </select>

    <select id="findByNum" resultMap="nodeResult">
        SELECT *
        FROM Node
        WHERE NodeNum = #{num}
    </select>

    <select id="search" resultMap="nodeResult">
        <choose>
            <when test="userType == 0">
                SELECT * FROM Node WHERE NodeMark LIKE '%${arg}%'
            </when>
            <otherwise>
                SELECT n.* FROM Node n, Unit u, Rent r WHERE r.GetwayId = n.GetwayId AND r.UnitId = u.UnitId
                AND NodeMark LIKE '%${arg}%' AND GETDATE() BETWEEN r.StartTime AND r.EndTime AND u.UnitId =
                #{unitId}
            </otherwise>
        </choose>
    </select>
</mapper>
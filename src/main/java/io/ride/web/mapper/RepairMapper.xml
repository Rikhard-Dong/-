<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.ride.web.dao.RepairDao">

    <insert id="add">
        INSERT INTO Repair
        <trim prefix="(" suffixOverrides="," suffix=")">
            <if test="repair.nodeId != null">NodeId,</if>
            <if test="repair.faultDesc != null">FaultDesc,</if>
            <if test="repair.phone != null">Phone,</if>
            <if test="repair.person != null">Person,</if>
            <if test="repair.address != null">Address,</if>
        </trim>
        VALUES
        <trim prefix="(" suffixOverrides="," suffix=")">
            <if test="repair.nodeId != null">#{repair.nodeId},</if>
            <if test="repair.faultDesc != null">#{repair.faultDesc},</if>
            <if test="repair.phone != null">#{repair.phone},</if>
            <if test="repair.person != null">#{repair.person},</if>
            <if test="repair.address != null">#{repair.address},</if>
        </trim>
    </insert>

    <update id="update">
        UPDATE Repair SET
        <trim suffixOverrides=",">
            <if test="repair.nodeId != null">NodeId = #{repair.nodeId},</if>
            <if test="repair.faultDesc != null">FaultDesc = #{repair.faultDesc},</if>
            <if test="repair.phone != null">Phone = #{repair.phone},</if>
            <if test="repair.person != null">Person = #{repair.person},</if>
            <if test="repair.address != null">Address = #{repair.address},</if>
            <if test="repair.status != null">Status = #{repair.status},</if>
        </trim>
        WHERE RepairId = #{repair.repairId}
    </update>

    <update id="updateStatus">
        UPDATE Repair
        SET Status = #{status}
        WHERE RepairId = #{repairId}
    </update>

    <delete id="delete">
        DELETE FROM Repair
        WHERE RepairId = #{repaitId}
    </delete>

    <select id="list" resultType="io.ride.web.entity.Repair">
        <choose>
            <!-- 系统管理员 -->
            <when test="userType == 0">
                SELECT * FROM Repair
            </when>
            <!-- 单位管理员或者特权单位管理员 -->
            <otherwise>
                SELECT * FROM Repair WHERE NodeId IN (SELECT n.NodeId FROM Node n, Rent r, Unit u
                WHERE n.GetwayId = r.GetwayId AND r.UnitId = u.UnitId AND u.UnitId = #{unitId})
            </otherwise>

        </choose>
    </select>

    <select id="search" resultType="io.ride.web.entity.Repair">
        <choose>
            <!-- 系统管理员 -->
            <when test="userType == 0">
                SELECT * FROM Repair WHERE NodeId IN (SELECT n.NodeId FROM Node n WHERE n.NodeMark LIKE
                '%${param}%') OR person LIKE '%${param}%'
            </when>
            <!-- 单位管理员或者特权单位管理员 -->
            <otherwise>
                SELECT * FROM Repair WHERE NodeId IN (SELECT n.NodeId FROM Node n, Rent r, Unit u
                WHERE n.GetwayId = r.GetwayId AND r.UnitId = u.UnitId AND u.UnitId = #{unitId}) AND (NodeId IN
                (SELECT n.NodeId FROM Node n WHERE n.NodeMark LIKE
                '%${param}%') OR person LIKE '%${param}%')
            </otherwise>
        </choose>
    </select>

    <select id="findById" resultType="io.ride.web.entity.Repair">
        <choose>
            <!-- 系统管理员 -->
            <when test="userType == 0">
                SELECT * FROM Repair WHERE RepairId = #{repairId}
            </when>
            <!-- 单位管理员或者特权单位管理员 -->
            <otherwise>
                SELECT * FROM Repair WHERE NodeId IN (SELECT n.NodeId FROM Node n, Rent r, Unit u
                WHERE n.GetwayId = r.GetwayId AND r.UnitId = u.UnitId AND u.UnitId = #{unitId}) AND RepairId =
                #{repairId}
            </otherwise>
        </choose>
    </select>


</mapper>
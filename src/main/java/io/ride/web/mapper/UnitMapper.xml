<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.ride.web.dao.UnitDao">

    <insert id="add">
        INSERT INTO Unit
        <trim prefix="(" suffixOverrides="," suffix=")">
            <if test="unit.unitId != null">UnitId,</if>
            <if test="unit.title != null">Title,</if>
            <if test="unit.address != null">Address,</if>
            <if test="unit.person != null">Person,</if>
            <if test="unit.phone != null">Phone,</if>
            <if test="unit.email != null">Email,</if>
            <if test="unit.unitType != null">UnitType,</if>
            <if test="unit.memo != null">memo,</if>
        </trim>
        VALUES
        <trim prefix="(" suffixOverrides="," suffix=")">
            <if test="unit.unitId != null">#{unit.unitId},</if>
            <if test="unit.title != null">#{unit.title},</if>
            <if test="unit.address != null">#{unit.address},</if>
            <if test="unit.person != null">#{unit.person},</if>
            <if test="unit.phone != null">#{unit.phone},</if>
            <if test="unit.email != null">#{unit.email},</if>
            <if test="unit.unitType != null">#{unit.unitType},</if>
            <if test="unit.memo != null">#{unit.memo},</if>
        </trim>
    </insert>

    <update id="update">
        UPDATE Unit SET
        <trim suffixOverrides=",">
            <if test="unit.address != null">Address = #{unit.address},</if>
            <if test="unit.person != null">Person = #{unit.person},</if>
            <if test="unit.phone != null">Phone = #{unit.phone},</if>
            <if test="unit.email != null">Email = #{unit.email},</if>
            <if test="unit.unitType != null">UnitType = #{unit.unitType},</if>
            <if test="unit.memo != null">memo = #{unit.memo},</if>
        </trim>
        WHERE Title = #{unit.title};
    </update>

    <delete id="deleteById">
        DELETE FROM Unit
        WHERE UnitId = #{id}
    </delete>

    <delete id="deleteByTitle">
        DELETE FROM Unit
        WHERE Title = #{title}
    </delete>

    <select id="list" resultType="io.ride.web.entity.Unit">
        SELECT *
        FROM Unit
    </select>

    <select id="listUnitUser" resultType="io.ride.web.entity.UserInfo">
        SELECT userInfo.*
        FROM Unit
            INNER JOIN userInfo ON Unit.UnitId = userInfo.UnitId
        WHERE userInfo.UnitId = #{id}
    </select>

    <select id="findById" resultType="io.ride.web.entity.Unit">
        SELECT *
        FROM Unit
        WHERE UnitId = #{id}
    </select>

    <select id="isExists" resultType="java.lang.Boolean">
        SELECT COUNT(*) = 1
        FROM Unit
        WHERE UnitId = #{id}
    </select>

    <select id="findByTitle" resultType="io.ride.web.entity.Unit">
        SELECT *
        FROM Unit
        WHERE Title = #{title}
    </select>

    <select id="listRentingGetway" resultType="io.ride.web.entity.Getway">
        SELECT g.*
        FROM Getway g, Rent r, Unit u
        WHERE
            g.getway_id = r.getway_id AND r.UnitId = u.UnitId
            AND CURRENT_TIME BETWEEN r.StartTime AND r.EndTime
            AND u.Title = #{title}
    </select>

    <select id="search" resultType="io.ride.web.entity.Unit">
        SELECT *
        FROM Unit
        WHERE Title LIKE '%${arg}%'
    </select>

    <select id="listByRent" resultType="io.ride.web.entity.Unit">
        SELECT *
        FROM Unit
        WHERE UnitId IN (SELECT UnitId
                         FROM Rent
                         WHERE GetwayId IN (SELECT GetWayId
                                            FROM Getway
                                            WHERE GetwayMark = #{mark})
                               AND GETDATE() BETWEEN StartTime AND EndTime)
    </select>
</mapper>